generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nickname  String    @unique
  messages  Message[]
  rooms     Room[]
  tokens    Token[]

  @@index([username])
}

model Token {
  id              Int      @id @default(autoincrement())
  userId          Int
  rotationCounter Int      @default(1)
  createdAt       DateTime @default(now())
  blocked         Boolean  @default(false)
  user            User     @relation(fields: [userId], references: [id])
}

model Room {
  id                Int       @id @default(autoincrement())
  code              String    @unique
  name              String    @unique
  description       String
  lastMessage       String?
  timeOfLastMessage DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  isPrivate         Boolean   @default(false)
  managerId         Int
  messages          Message[]
  manager           User      @relation(fields: [managerId], references: [id], onDelete: Cascade)
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  roomCode  String
  timestamp DateTime @default(now())
  room      Room     @relation(fields: [roomCode], references: [code], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([roomCode])
}
